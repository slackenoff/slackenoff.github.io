# 笔试题
###########################出处： 牛客
1. 基础，获取终端输入的字符串/数字，并输出输入内容及其数据类型
	print('请输入一串数字：')
	t = int(input())
	print('输入的数字如下：', t, '输入的数据类型为：', type(t))
解法： 
	print('请输入一串数字：')
	try:
		t = int(input())
	except Exception as e:
		print(e)
	finally:
		print('输入的数字如下：', t, '输入的数据类型为：', type(t))
	如果数据类型与指定的输入类型不一致，会报错： invalid literal for int() with base 10: '2jk'
2.格式化输出  —— f{}  || %d 整数、f 浮点数、s 字符串  ||format
	


1. 常用builtins的应用
	如： 打印9×9乘法表，1-100求和等
	
2. 标准库，常用的标准库并简要介绍

3. 函数内部修改全局变量  --考察变量作用域

4. 基本数据类型操作，如去重，前x位，后x位,可变数据类型，不可变数据类型

5. GIL ？
	Global Interpreter Lock: 加锁可以解决线程之间数据一致性和状态同步问题
	GIL是全局排他锁，这会影响多线程的效率，近乎就是单线程
6. *args ， **kwargs
	*args: 保存多余变量，保存方式为元组
	**kwargs：保存带有变量名的多余变量，保存方式为字典
7. 装饰器
	概括的说：装饰器就是修改其他函数的功能的函数
	说明：函数可以嵌套，函数也可以返回函数
	应用场景: 	
		a.授权
		b.日志 
8. 文件IO， with

9. 随机数

10. CGI 通用网关接口，是一段运行在服务器上的程序，提供同客户端html页面的接口
		--暂时不考虑
		
11. PyMySQL  python3用于连接mysql服务器的库

	对数据库操作的简单事例：
	# 导入mysql库
	import pymysql
	
	# 创建连接
	conn = pymysql.connect('localhost','user','pwd','database')
	
	# 使用cursor（）创建一个游标对象
	
	cur = conn.cursor()
	
	# 使用execute执行sql
	try:
		cur.execute('sql_statement')
		conn.commit()
	except:
		conn.rollback()
	事例： sql_statement = '''select ....'''
	
	# 使用fetchone/all获取单条数据
	
	data = cur.fetchone/all()
	
	print('%s' % data)
	
	# 关闭连接
	conn.close()

12. 多线程
	线程，进程，上下文
	
	线程生命周期
	
	线程分类： 内核线程，用户线程
	
	python3的线程模块： _thread 及threading
	
	线程同步
	
	线程优先级队列

13. 网络编程
	a. socket
	b.socketserver
	
	
	
